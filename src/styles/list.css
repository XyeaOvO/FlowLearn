/* Modern List Header */
.list-header {
  background: var(--panel);
  border-bottom: 1px solid var(--border-subtle);
  position: sticky;
  top: 0;
  z-index: 10;
}

/* Reset any default browser styles that might cause issues */
.list-header *,
.search-section *,
.search-input-container *,
.quick-filters * {
  outline: none !important;
  box-shadow: none !important;
}

.list-header *:focus,
.search-section *:focus,
.search-input-container *:focus,
.quick-filters *:focus {
  outline: none !important;
}

/* Override focus styles specifically for our search input */
.search-input-container:focus-within {
  outline: none !important;
}

/* Search Section */
.search-section {
  display: flex;
  gap: var(--spacing-3);
  align-items: center;
  padding: var(--spacing-4) var(--spacing-5);
  border-bottom: 1px solid var(--border-primary);
  overflow-x: auto;
  scrollbar-width: none;
}

.search-section::-webkit-scrollbar {
  display: none;
}

.search-input-container {
  flex: 1;
  position: relative;
  display: flex;
  align-items: center;
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-lg);
  padding: 0 var(--spacing-4);
  transition: all var(--transition-fast);
  min-width: 200px;
  outline: none;
}

.search-input-container:focus-within {
  border-color: var(--border-focus);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
  background: var(--bg-primary);
  outline: none !important;
}

.search-icon {
  color: var(--text-tertiary);
  margin-right: var(--spacing-3);
  font-size: var(--font-size-sm);
}

.search-input {
  flex: 1;
  border: none;
  background: transparent;
  padding: var(--spacing-3) 0;
  font-size: var(--font-size-sm);
  color: var(--text-primary);
  outline: none;
  line-height: var(--line-height-normal);
}

.search-input:focus {
  outline: none;
  border: none;
}

.search-input::placeholder {
  color: var(--muted);
}

.search-clear {
  background: none;
  border: none;
  color: var(--muted);
  cursor: pointer;
  padding: 4px;
  border-radius: 50%;
  margin-left: 8px;
  transition: all var(--transition);
}

.search-clear:hover {
  background: var(--bg-secondary);
  color: var(--text);
}

.filter-toggle, .selection-toggle {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 10px 16px;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background: var(--panel);
  color: var(--text-secondary);
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition);
  position: relative;
  white-space: nowrap;
  flex-shrink: 0;
}

.filter-toggle:hover, .selection-toggle:hover {
  border-color: var(--primary);
  color: var(--primary);
  background: var(--primary-50);
}

.filter-toggle.active {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

.filter-icon {
  font-size: 12px;
}

.filter-badge {
  position: absolute;
  top: -4px;
  right: -4px;
  width: 8px;
  height: 8px;
  background: var(--danger);
  border-radius: 50%;
  color: white;
  font-size: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Quick Filters */
.quick-filters {
  display: flex;
  gap: 8px;
  padding: 12px 20px;
  overflow-x: auto;
  scrollbar-width: none;
}

.quick-filters::-webkit-scrollbar {
  display: none;
}

.quick-filter {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border: 1px solid var(--border-subtle);
  border-radius: var(--radius-lg);
  background: var(--panel);
  color: var(--text-secondary);
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition);
  white-space: nowrap;
  flex-shrink: 0;
}

.quick-filter:hover {
  border-color: var(--border);
  background: var(--panel-hover);
  color: var(--text);
}

.quick-filter.active {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
}

.status-indicator {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  flex-shrink: 0;
}

.status-indicator.all {
  background: var(--muted);
}

.status-indicator.new {
  background: var(--primary);
}

.status-indicator.learning {
  background: var(--warning);
}

.status-indicator.mastered {
  background: var(--success);
}

/* Advanced Filters Panel */
.filters-panel {
  background: var(--bg-secondary);
  border-top: 1px solid var(--border-subtle);
  padding: 20px;
  animation: slideDown 0.2s ease-out;
}

.filters-row {
  display: flex;
  gap: 20px;
  margin-bottom: 16px;
  flex-wrap: wrap;
}

.filters-row:last-child {
  margin-bottom: 0;
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: 8px;
  min-width: 200px;
  flex: 1;
}

.filter-group.domain {
  flex: 1;
  max-width: 220px;
  min-width: 180px;
}

.filter-group.date-range {
  flex: 0 0 280px;
  min-width: 280px;
  max-width: 280px;
}

.filter-group.regex {
  flex: 1;
  min-width: 250px;
}

.filter-label {
  font-size: 12px;
  font-weight: 600;
  color: var(--text);
  margin-bottom: 4px;
}

.filter-input {
  padding: 10px 14px;
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  background: var(--panel);
  color: var(--text);
  font-size: 13px;
  transition: all var(--transition);
}

.filter-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
}

.filter-input.date {
  flex: 1;
  min-width: 120px;
  height: 36px;
  padding: 8px 12px 8px 36px;
  position: relative;
  cursor: pointer;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='4' width='18' height='18' rx='2' ry='2'%3E%3C/rect%3E%3Cline x1='16' y1='2' x2='16' y2='6'%3E%3C/line%3E%3Cline x1='8' y1='2' x2='8' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='10' x2='21' y2='10'%3E%3C/line%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: 12px center;
  background-size: 16px;
  font-size: 13px;
  color: var(--text);
}

.filter-input.date::-webkit-calendar-picker-indicator {
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.filter-input.date:hover {
  background-color: var(--panel-hover);
  border-color: var(--border);
}

.filter-input.date:focus {
  background-color: var(--panel);
}

.filter-input.date:not(:placeholder-shown) {
  color: var(--text);
  font-weight: 500;
}

.filter-input.date::placeholder {
  color: transparent;
}

.date-inputs {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
}

.date-separator {
  color: var(--muted);
  font-size: 12px;
  font-weight: 500;
  flex-shrink: 0;
  white-space: nowrap;
  padding: 0 4px;
}

.filter-options {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
  align-items: center;
}

.filter-option {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  font-size: 13px;
  color: var(--text);
  position: relative;
}

.filter-option input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.checkmark {
  position: relative;
  width: 18px;
  height: 18px;
  background: var(--panel);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  transition: all var(--transition);
  flex-shrink: 0;
}

.filter-option:hover .checkmark {
  border-color: var(--primary);
}

.filter-option input:checked ~ .checkmark {
  background: var(--primary);
  border-color: var(--primary);
}

.filter-option input:checked ~ .checkmark::after {
  content: '';
  position: absolute;
  left: 5px;
  top: 2px;
  width: 4px;
  height: 8px;
  border: 2px solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.regex-input {
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  background: var(--bg);
  border: 1px solid var(--border);
}

.filter-actions {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  padding-top: 16px;
  border-top: 1px solid var(--border-subtle);
}

.filter-clear {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 10px 20px;
  background: var(--bg-secondary);
  border: 1px solid var(--border);
  border-radius: var(--radius-lg);
  color: var(--text);
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition);
}

.filter-clear:hover {
  background: var(--danger-50);
  border-color: var(--danger);
  color: var(--danger);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(239, 68, 68, 0.2);
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Selection Panel */
.selection-panel {
  background: var(--primary-50);
  border-bottom: 1px solid var(--primary);
  padding: 16px 20px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  animation: slideDown 0.2s ease-out;
}

.selection-info {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
}

.select-all-option {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  color: var(--primary);
  position: relative;
}

.select-all-option input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.select-all-option .checkmark {
  width: 20px;
  height: 20px;
  background: var(--panel);
  border: 2px solid var(--primary);
  border-radius: var(--radius);
}

.select-all-option input:checked ~ .checkmark {
  background: var(--primary);
}

.select-all-option input:checked ~ .checkmark::after {
  left: 6px;
  top: 3px;
  width: 4px;
  height: 8px;
}

.selection-count {
  font-size: 13px;
  color: var(--primary);
  font-weight: 500;
}

.count-number {
  background: var(--primary);
  color: white;
  padding: 2px 8px;
  border-radius: var(--radius);
  font-weight: 700;
  font-size: 12px;
}

.selection-actions {
  display: flex;
  gap: 16px;
  flex-wrap: wrap;
  align-items: center;
  padding-top: 8px;
  border-top: 1px solid rgba(79, 70, 229, 0.2);
}

.bulk-action-group {
  display: flex;
  align-items: center;
  gap: 8px;
  background: var(--panel);
  padding: 8px 12px;
  border-radius: var(--radius-md);
  border: 1px solid var(--border-subtle);
}

.action-label {
  font-size: 12px;
  font-weight: 500;
  color: var(--text-secondary);
  min-width: 32px;
}

.action-select, .action-input {
  border: 1px solid var(--border);
  border-radius: var(--radius);
  padding: 6px 10px;
  font-size: 12px;
  background: var(--panel);
  color: var(--text);
  min-width: 100px;
}

.action-select:focus, .action-input:focus {
  outline: none;
  border-color: var(--primary);
}

.action-apply {
  padding: 6px 12px;
  background: var(--primary);
  color: white;
  border: none;
  border-radius: var(--radius);
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition);
}

.action-apply:hover {
  background: var(--primary-600);
}

.action-apply:disabled {
  background: var(--muted);
  cursor: not-allowed;
}

.action-delete, .action-restore {
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 16px;
  border: none;
  border-radius: var(--radius-md);
  font-size: 13px;
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition);
}

.action-delete {
  background: var(--danger);
  color: white;
}

.action-delete:hover {
  background: var(--danger-600);
}

.action-restore {
  background: var(--success);
  color: white;
}

.action-restore:hover {
  background: #16a34a;
}

.list-content {
  flex: 1;
  padding: 16px;
  overflow-y: auto;
  min-height: 0; /* 确保 flex 子元素可以正确缩小 */
  -webkit-overflow-scrolling: touch; /* 在 iOS 设备上启用平滑滚动 */
}

.list-item {
  background: var(--panel);
  padding: 12px 16px;
  border-radius: var(--radius);
  margin-bottom: 8px;
  cursor: pointer;
  border: 1px solid var(--border-subtle);
  transition: all var(--transition);
}

.list-item:hover {
  background: var(--panel-hover);
  border-color: var(--border);
}

.list-item.active {
  background: var(--primary-50);
  border-color: var(--primary);
}

.list-item-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  margin-bottom: 6px;
}

.list-item .title {
  font-size: 15px;
  font-weight: 500;
  color: var(--text);
}

.list-item .meta {
  font-size: 12px;
  color: var(--muted);
}

.list-pane {
  background: var(--bg-secondary);
  border-right: 1px solid var(--border);
  display: flex;
  flex-direction: column;
  min-height: 0; /* 确保 flex 子元素可以正确缩小 */
}